// Part one.
print "abcd12
make "a 16
print :a
make "b "a
print thing :b
make "c mul add :a 13 :a
print sub :c "6
print not gt 3 1
make "d read
1234dd
print isname "d
print :d
make "x eq :d "1234dd
print :x
erase "d
print not isname "d

// Part two.
make "a 1
repeat 5 [make "a add :a 1 print :a]
print :a
make "n 6
make "f [
    [n]
    [
        if lt :n 2
            [output 1]
            [output mul :n f sub :n 1]
    ]
]
print f :n
print :n
make "f [
    [n]
    [
        if eq :n 4
            [stop]
            [print :n f add :n 1]
    ]
]
f 1
make "let [
    [a123128736128asd b71823681263ahsgdajd]
    [
        make :a123128736128asd :b71823681263ahsgdajd
        make "qisi 74
        export :a123128736128asd
    ]
]
let "a 8
print :a
print isname "qisi
make "gcd [
    [a b]
    [
        if eq :b 0
            [output :a]
            [output gcd :b mod :a :b]
    ]
]
print gcd 36 21

// Part Three
